---
title: "Primeros pasos con PostGIS"
---

## Habilitar PostGIS en la base de datos

```sql
CREATE EXTENSION IF NOT EXISTS postgis;
CREATE EXTENSION IF NOT EXISTS postgis_topology;
```

Verifique versiones:

```sql
SELECT postgis_version(), postgis_full_version();
```

## Geometrías y SRID

Declare columnas geométricas con tipo explícito.

```sql
CREATE TABLE IF NOT EXISTS catastro.veredas (
  vereda_id SERIAL PRIMARY KEY,
  municipio TEXT NOT NULL,
  vereda_nombre TEXT NOT NULL,
  geom geometry(MultiPolygon, 32618)
);
```

### Cargar geometrías desde shapefiles

Use `shp2pgsql` dentro de una transacción.

```bash
shp2pgsql -s 32618 Servicio-690/ShapeFile/CRVeredas_2020.shp stg.veredas_raw \
  | psql -d sig_fedearroz_fna
```

## Funciones espaciales clave

```sql
-- Área en hectáreas
SELECT vereda_nombre,
       ST_Area(geom) / 10000 AS area_ha
FROM stg.veredas_norm;
```

```sql
-- Centroides para etiquetas
SELECT vereda_nombre,
       ST_Centroid(geom) AS centroide
FROM stg.veredas_norm;
```

```sql
-- Relaciones espaciales
SELECT a.vereda_nombre AS vereda,
       b.upa_nombre AS upa,
       ST_Intersects(a.geom, b.geom) AS intersecta
FROM stg.veredas_norm a
JOIN stg.upas_norm b
  ON ST_Intersects(a.geom, b.geom);
```

## Validación de geometrías

```sql
SELECT COUNT(*) AS geometria_invalida
FROM stg.veredas_norm
WHERE NOT ST_IsValid(geom);
```

Corrija geometrías defectuosas con `ST_MakeValid` dentro de una CTE para evitar actualizaciones parciales.

## Indexación espacial

```sql
CREATE INDEX IF NOT EXISTS idx_veredas_geom
  ON stg.veredas_norm
  USING GIST (geom);
```

Los índices `GiST` aceleran búsquedas espaciales y son imprescindibles para QGIS.
